import is from 'electron-is';
import electron from 'electron';
import PlugModule from 'plug-module';
import { version } from '../../package.json';

const mod = new PlugModule('env');
const app = is.main() ? electron.app : electron.remote.app;
const api = {
    isMain: is.main(),
    isRenderer: is.renderer(),
    isMacOS: is.macOS(),
    isWindows: is.windows(),
    isLinux: is.linux(),
    isX86: is.x86(),
    isX64: is.x64(),
    isProd: __env__ === 'prod',
    isDev: __env__ === 'dev',
    isSandbox: is.sandbox(),
    isMas: is.mas(),
    isWindowsStore: is.windowsStore(),
    isRelease: is.release,
    isGtRelease: is.gtRelease,
    isLtRelease: is.ltRelease,
    isReady: app.isReady,
    appPath: app.getAppPath(),
    resourcesPath: process.resourcesPath,
    homePath: app.getPath('home'),
    appDataPath: app.getPath('appData'),
    userDataPath: app.getPath('userData'),
    tempPath: app.getPath('temp'),
    desktopPath: app.getPath('desktop'),
    documentsPath: app.getPath('documents'),
    downloadsPath: app.getPath('downloads'),
    musicPath: app.getPath('music'),
    picturesPath: app.getPath('pictures'),
    videosPath: app.getPath('videos'),
    version,
    appVersion: app.getVersion(),
    chromeVersion: process.versions.chrome,
    electronVersion: process.versions.electron,
};

mod.addMethod(api);
mod.injectMethodsToGlobal();

export default mod.exportModule();
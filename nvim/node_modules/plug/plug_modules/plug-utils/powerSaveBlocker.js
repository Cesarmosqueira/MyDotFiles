import is from 'electron-is';
import electron from 'electron';

const types = {
    PREVENT_APP_SUSPENSION: 'prevent-app-suspension',
    PREVENT_DISPLAY_SLEEP: 'prevent-display-sleep',
};

let blockerId;
let status = false;

/**
 * Preventing the system from entering lower-power mode
 * @param {string} type - Support two modes: "prevent-app-suspension" and "prevent-display-sleep"
 */
function blockPowerSave(type) {
    if (type === types.PREVENT_APP_SUSPENSION || type === types.PREVENT_DISPLAY_SLEEP) {
        unblockPowerSave();
        blockerId = electron.powerSaveBlocker.start(type);
        status = type;
    }
}

/**
 * Allow the system to enter lower-power mode
 */
function unblockPowerSave() {
    if (status && blockerId !== null) {
        electron.powerSaveBlocker.stop(blockerId);
        blockerId = null;
        status = false;
    }
}

/**
 * Check whether the module is preventing the system from entering lower-power mode
 * @return {string | boolean} - Return mode. If not preventing, return false
 */
function isPowerSaveBlocked() {
    return status;
}

export default {
    blockPowerSave,
    unblockPowerSave,
    isPowerSaveBlocked,
};
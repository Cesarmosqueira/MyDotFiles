import electron from 'electron';
import is from 'electron-is';
import fs from 'fs';
import path from 'path';
import PlugModule from 'plug-module';
import systemApi from './system';
import screenApi from './screen';
import powerSaveBlockerApi from './powerSaveBlocker';

const mod = new PlugModule('utils');
export const appPath = getAppPath();
const api = {
    appPath,
    requireShared,
    ready: callback => plug.on('plug.app.ready', callback),
};

function getAppPath() {
    const basePath = __env__ !== 'prod' ? process.cwd() : process.resourcesPath;
    const folderName = fs.existsSync(path.join(basePath, 'app')) ? 'app' : 'app.asar';

    return path.join(basePath, folderName);
}

export function requireShared(moduleName) {
    return is.main()
        ? eval('require')(`${appPath}/shared_modules/${moduleName}`)
        : electron.remote.require(`${appPath}/shared_modules/${moduleName}`);
}

export function isPathAbsolute(path) {
    return /^(?:\/|[a-z]+:\/\/)/.test(path);
}

mod.addMethod(api);
mod.addMethod(systemApi);
mod.createMethod(powerSaveBlockerApi);
mod.injectMethodsToGlobal();

mod.addMethod(screenApi);
mod.injectMethodsToGlobalOnReady(Object.keys(screenApi));

export default mod.exportModule();
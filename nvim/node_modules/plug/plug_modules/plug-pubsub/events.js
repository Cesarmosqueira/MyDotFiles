import electron from 'electron';

export default () => {
    electron.app.on('ready', plug.emit.bind(this, 'plug.app.ready'));
    electron.app.on('window-all-closed', plug.emit.bind(this, 'plug.app.window-all-closed'));
    electron.app.on('before-quit', plug.emit.bind(this, 'plug.app.before-quit'));
    electron.app.on('will-quit', plug.emit.bind(this, 'plug.app.will-quit'));
    electron.app.on('quit', plug.emit.bind(this, 'plug.app.quit'));
    electron.app.on('activate', plug.emit.bind(this, 'plug.app.activate'));
    electron.app.on('browser-window-blur', plug.emit.bind(this, 'plug.window.blur'));
    electron.app.on('browser-window-focus', plug.emit.bind(this, 'plug.window.focus'));
    electron.app.on('browser-window-created', plug.emit.bind(this, 'plug.window.created'));

    electron.app.on('ready', (event, info) => {
        electron.powerMonitor.on('suspend', plug.emit.bind(this, 'plug.power.suspend'));
        electron.powerMonitor.on('resume', plug.emit.bind(this, 'plug.power.resume'));
        electron.powerMonitor.on('on-ac', plug.emit.bind(this, 'plug.power.on-ac'));
        electron.powerMonitor.on('on-battery', plug.emit.bind(this, 'plug.power.on-battery'));
        electron.screen.on('display-added', plug.emit.bind(this, 'plug.display.added'));
        electron.screen.on('display-removed', plug.emit.bind(this, 'plug.display.removed'));
    });
};
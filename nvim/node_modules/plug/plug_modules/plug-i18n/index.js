import electron from 'electron';
import PlugModule from 'plug-module';
import path from 'path';
import _ from 'lodash';
import i18nHelper from 'i18n-helper';
import { appPath } from '../plug-utils';

let localeInUse;
let localePacks;
const mod = new PlugModule('i18n');

mod.createSyncMethod('i18n', i18n);
mod.createSyncMethod('getLocale', getLocale);
mod.createSyncMethod('setLocale', setLocale);
mod.injectMethodsToGlobal();

mod.addMainBootstrapper(bootstrap);

function i18n(key, ...args) {
    if (!localeInUse || !localePacks || !localePacks[localeInUse]) {
        return key;
    }

    return i18nHelper(localePacks[localeInUse])(key, ...args);
}

function getLocale() {
    return localeInUse;
}

function setLocale(newLocale) {
    const isNew = localeInUse !== newLocale;

    if (isNew) {
        const oldLocale = localeInUse;
        localeInUse = newLocale;
        plug.emit('plug.locale.change', {}, newLocale, oldLocale);
    }

    return isNew;
}

function bootstrap(config) {
    localeInUse = config.app.locale;
    localePacks = config.localePacks;
}

export default mod.exportModule({
    bootstrapOrder: 1,
});